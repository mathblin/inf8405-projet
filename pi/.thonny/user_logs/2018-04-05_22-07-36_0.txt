[
    {
        "editor_class": "Editor",
        "time": "2018-04-05T22:07:37.035805",
        "sequence": "EditorTextCreated",
        "text_widget_class": "CodeViewText",
        "editor_id": 1970441904,
        "text_widget_id": 1970513552
    },
    {
        "filename": "/home/pi/Desktop/platoon/platoon3.py",
        "time": "2018-04-05T22:07:37.038071",
        "sequence": "Open",
        "editor_class": "Editor",
        "text_widget_class": "CodeViewText",
        "editor_id": 1970441904,
        "text_widget_id": 1970513552
    },
    {
        "index2": "2.0",
        "time": "2018-04-05T22:07:37.039121",
        "sequence": "TextDelete",
        "text_widget_class": "CodeViewText",
        "index1": "1.0",
        "text_widget_id": 1970513552
    },
    {
        "time": "2018-04-05T22:07:37.256166",
        "sequence": "TextInsert",
        "index": "1.0",
        "text_widget_class": "CodeViewText",
        "tags": "()",
        "text": "# import the necessary packages\nfrom picamera.array import PiRGBArray\nfrom picamera import PiCamera\nimport time\nimport cv2 \nimport numpy as np\n\n\n# initialize the camera and grab a reference to the raw camera capture\ncamera = PiCamera()\ncamera.resolution = (640, 480)\ncamera.framerate = 32\ncamera.rotation = 180\nrawCapture = PiRGBArray(camera, size=(640, 480))\n\n\n\n\n\n\n\u00e7\n\n\n\n\n# allow the camera to warmup\ntime.sleep(0.1)\n\ncap = cv2.VideoCapture('slow.flv')\n# take first frame of the video\nret,frame = cap.read()\n# setup initial location of window\nr,h,c,w = 250,90,400,125  # simply hardcoded the values\ntrack_window = (c,r,w,h)\n# set up the ROI for tracking\nroi = frame[r:r+h, c:c+w]\nhsv_roi =  cv2.cvtColor(roi, cv2.COLOR_BGR2HSV)\nmask = cv2.inRange(hsv_roi, np.array((0., 60.,32.)), np.array((180.,255.,255.)))\nroi_hist = cv2.calcHist([hsv_roi],[0],mask,[180],[0,180])\ncv2.normalize(roi_hist,roi_hist,0,255,cv2.NORM_MINMAX)\n# Setup the termination criteria, either 10 iteration or move by atleast 1 pt\nterm_crit = ( cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT, 10, 1 )\nwhile(1):\n    ret ,frame = cap.read()\n    if ret == True:\n        hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\n        dst = cv2.calcBackProject([hsv],[0],roi_hist,[0,180],1)\n        # apply meanshift to get the new location\n        ret, track_window = cv2.CamShift(dst, track_window, term_crit)\n        # Draw it on image\n        pts = cv2.boxPoints(ret)\n        pts = np.int0(pts)\n        img2 = cv2.polylines(frame,[pts],True, 255,2)\n        cv2.imshow('img2',img2)\n        k = cv2.waitKey(60) & 0xff\n        if k == 27:\n            break\n        else:\n            cv2.imwrite(chr(k)+\".jpg\",img2)\n    else:\n        break\ncv2.destroyAllWindows()\ncap.release()\n",
        "text_widget_id": 1970513552
    },
    {
        "sequence": "ShowView",
        "view_id": 1970385232,
        "time": "2018-04-05T22:07:37.287354",
        "view_class": "ShellView"
    },
    {
        "sequence": "<FocusIn>",
        "widget_class": "Workbench",
        "widget_id": 1983725552,
        "time": "2018-04-05T22:07:38.679778"
    },
    {
        "index": "1.0",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText",
        "time": "2018-04-05T22:07:38.736841",
        "tags": "('welcome',)",
        "text": "Python 3.5.3 (/usr/bin/python3)",
        "text_widget_id": 1970386224
    },
    {
        "index": "1.31",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText",
        "time": "2018-04-05T22:07:38.740235",
        "tags": "('io',)",
        "text": "\n",
        "text_widget_id": 1970386224
    },
    {
        "index": "2.0",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText",
        "time": "2018-04-05T22:07:38.742770",
        "tags": "('toplevel', 'prompt')",
        "text": ">>> ",
        "text_widget_id": 1970386224
    }
]